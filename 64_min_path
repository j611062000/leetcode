class Solution:
    def minPathSum(self, grid: list[list[int]]) -> int:
        r = len(grid)
        c = len(grid[0])
        dp: dict[tuple[int, int], int] = {(0,0): grid[0][0]}

        for i in range(r):
            if i != 0:
                dp[(i, 0)] =dp[(i-1, 0)] + grid[i][0]
        
        for j in range(c):
            if j != 0:
                dp[(0, j)] = dp[(0, j-1)] + grid[0][j]
        
        

        for i in range(1, r):
            for j in range(1, c):
                dp[(i, j)] = grid[i][j] + min(dp[(i-1, j)],  dp[(i, j-1)])
        return dp[(r-1, c-1)]
        

if __name__ == '__main__':
    sol = Solution()
    
    test = [[1,3,1],[1,5,1],[4,2,1]]
    print(sol.minPathSum(test))
       